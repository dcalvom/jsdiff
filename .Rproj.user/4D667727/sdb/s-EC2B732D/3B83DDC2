{
    "contents" : "HTMLWidgets.widget({\n\n  name: 'jsdiff',\n\n  type: 'output',\n\n  initialize: function(el, width, height) {\n    return {};\n  },\n\n  renderValue: function(el, x, instance) {\n\n    var result = $('#' + el.id + ' code');\n    result.addClass(x.language);\n\n    function changed() {\n      var diff = JsDiff['diff' + x.diffType](x.oldStr, x.newStr);\n    \tvar fragment = document.createDocumentFragment();\n    \tfor (var i=0; i < diff.length; i++) {\n    \t\tif (diff[i].added && diff[i + 1] && diff[i + 1].removed) {\n    \t\t\tvar swap = diff[i];\n    \t\t\tdiff[i] = diff[i + 1];\n    \t\t\tdiff[i + 1] = swap;\n    \t\t}\n    \t\tvar node;\n    \t\tif (diff[i].removed) {\n    \t\t\tnode = document.createElement('del');\n    \t\t\tnode.appendChild(document.createTextNode(diff[i].value));\n    \t\t} else if (diff[i].added) {\n    \t\t\tnode = document.createElement('ins');\n    \t\t\tnode.appendChild(document.createTextNode(diff[i].value));\n    \t\t} else {\n      \t\tnode = document.createElement('span');\n    \t\t\tnode.appendChild(document.createTextNode(diff[i].value));\n    \t\t}\n    \t\tfragment.appendChild(node);\n    \t}\n    \tresult.text('');\n    \tresult.append(fragment);\n\n      result.each(function(i, block) {\n        hljs.highlightBlock(block);\n      });\n    }\n\n    var diffType = $('#' + el.id + ' input:radio');\n    diffType.change(\n      function(){\n          x.diffType = this.value;\n          changed();\n      }\n    );\n    diffType.filter('[value=\"' + x.diffType + '\"]').attr('checked', true);\n    changed();\n  },\n\n  resize: function(el, width, height, instance) {\n\n  }\n\n});\n",
    "created" : 1419392025907.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3282710070",
    "id" : "3B83DDC2",
    "lastKnownWriteTime" : 1419463662,
    "path" : "~/GitHub/jsdiff/inst/htmlwidgets/jsdiff.js",
    "project_path" : "inst/htmlwidgets/jsdiff.js",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "js"
}